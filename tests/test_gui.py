#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ GUI –¥–æ–¥–∞—Ç–∫—É
"""

import sys
import os
from pathlib import Path

# –î–æ–¥–∞—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –ø–∞–ø–∫—É –¥–æ sys.path
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))

def test_imports():
    """–¢–µ—Å—Ç—É—î —á–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ –º–æ–∂–Ω–∞ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç—ñ–≤...")
    
    try:
        import tkinter as tk
        print("‚úÖ tkinter - OK")
    except ImportError as e:
        print(f"‚ùå tkinter - FAIL: {e}")
        return False
    
    try:
        from tkinter import ttk
        print("‚úÖ tkinter.ttk - OK")
    except ImportError as e:
        print(f"‚ùå tkinter.ttk - FAIL: {e}")
        return False
    
    try:
        import threading
        print("‚úÖ threading - OK")
    except ImportError as e:
        print(f"‚ùå threading - FAIL: {e}")
        return False
        
    try:
        from gui.main_window import FreelancehuntGUI
        print("‚úÖ GUI –º–æ–¥—É–ª—ñ - OK")
    except ImportError as e:
        print(f"‚ùå GUI –º–æ–¥—É–ª—ñ - FAIL: {e}")
        return False
        
    try:
        from db.requests import get_all_projects
        print("‚úÖ Database –º–æ–¥—É–ª—ñ - OK")
    except ImportError as e:
        print(f"‚ùå Database –º–æ–¥—É–ª—ñ - FAIL: {e}")
        return False
        
    return True

def test_gui_creation():
    """–¢–µ—Å—Ç—É—î —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI –≤—ñ–∫–Ω–∞"""
    print("\nüñ•Ô∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI...")
    
    try:
        import tkinter as tk
        from gui.main_window import FreelancehuntGUI
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –≤—ñ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  # –•–æ–≤–∞—î–º–æ –≤—ñ–∫–Ω–æ
        
        app = FreelancehuntGUI(root)
        print("‚úÖ GUI —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–∫–Ω–æ
        root.destroy()
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI: {e}")
        return False

def test_database_connection():
    """–¢–µ—Å—Ç—É—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"""
    print("\nüíæ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î...")
    
    try:
        from db.requests import get_all_projects
        projects = get_all_projects()
        print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –¥–æ—Å—Ç—É–ø–Ω–∞, –ø—Ä–æ–µ–∫—Ç—ñ–≤: {len(projects)}")
        return True
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î: {e}")
        return False

def test_file_structure():
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤"""
    print("\nüìÅ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ —Ñ–∞–π–ª—ñ–≤...")
    
    required_files = [
        "gui_app.py",
        "gui/main_window.py", 
        "build_exe.py",
        "run_gui.bat",
        "run_gui.ps1",
        "build.bat",
        "build.ps1"
    ]
    
    all_ok = True
    for file_path in required_files:
        if os.path.exists(file_path):
            print(f"‚úÖ {file_path}")
        else:
            print(f"‚ùå {file_path} - –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")
            all_ok = False
            
    return all_ok

def main():
    print("üöÄ Freelancehunt Automizer GUI - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è")
    print("=" * 50)
    
    tests_passed = 0
    total_tests = 4
    
    # –¢–µ—Å—Ç 1: –Ü–º–ø–æ—Ä—Ç–∏
    if test_imports():
        tests_passed += 1
        
    # –¢–µ—Å—Ç 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª—ñ–≤
    if test_file_structure():
        tests_passed += 1
        
    # –¢–µ—Å—Ç 3: –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö
    if test_database_connection():
        tests_passed += 1
        
    # –¢–µ—Å—Ç 4: GUI —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
    if test_gui_creation():
        tests_passed += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:")
    print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç—ñ–≤: {tests_passed}/{total_tests}")
    
    if tests_passed == total_tests:
        print("üéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print("‚úÖ GUI –¥–æ–¥–∞—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è")
        return True
    else:
        print("‚ö†Ô∏è –î–µ—è–∫—ñ —Ç–µ—Å—Ç–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
        print("‚ùå –ü–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –ø–µ—Ä–µ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º")
        return False

if __name__ == "__main__":
    success = main()
    
    print(f"\n–î–ª—è –∑–∞–ø—É—Å–∫—É GUI –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ:")
    print("poetry run python gui_app.py")
    print("–∞–±–æ")
    print("run_gui.bat")
    
    sys.exit(0 if success else 1)
